const { LambdaClient, InvokeCommand } = require("@aws-sdk/client-lambda");

const config = {
  region: "us-west-2",
  endpoint: "http://127.0.0.1:3001",
  credentials: {
    accessKeyId: "dummyAccessKeyId",
    secretAccessKey: "dummySecretAccessKey",
  },
};

const client = new LambdaClient(config);

const invokeFunction = async () => {
  const params = {
    FunctionName: "PRReminder-PRChecker",
    Payload: JSON.stringify({
      "pr": {
        "url": "PR LINK HERE...",
        "namespace": "GitLab namespace",
        "project": "GitLab project name",
        "prID": "PR ID"
      },
      "approvalStatus": {
        "approved": false,
        "approvalsRequired": 0,
        "approvalsLeft": 0
      },
      "slackMessage": {
        "type": "event_callback",
        "event": {
          "type": "message",
          "ts": "1719777952.293069",
          "channel": "C0788GWTRJ6",
          "text": "Review this PR:\n\n<PR LINK HERE...>",
          "thread_ts": "",
          "subtype": "",
          "message": {
            "text": "",
            "subtype": "",
            "thread_ts": "",
            "ts": ""
          }
        }
      },
      "waitingTime": 1015
    }),
  };

  try {
    const command = new InvokeCommand(params);
    const response = await client.send(command);

    console.log("Response payload:", new TextDecoder().decode(response.Payload));
    console.log("Response status code:", response.StatusCode);
  } catch (err) {
    console.error("Error invoking Lambda function:", err);
  }
};

invokeFunction();


