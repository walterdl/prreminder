version: '3'

tasks:
  install_compiledaemon:
    cmds:
      - cd local && GOBIN=$(pwd) go install github.com/githubnemo/CompileDaemon@latest
  build:
    dir: '{{.USER_WORKING_DIR}}'
    preconditions:
      # Build programs only, avoiding the CDK app.
      - test -f main.go
      - test "$(basename $(pwd))" != "cdk"
    cmds:
      - GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -tags lambda.norpc -ldflags="-s -w" -o ./dist/bootstrap
  build-all:
    dir: '{{.ROOT_DIR}}'
    cmds:
      # Go through each cmd/<?> directory and build the Go program.
      - for d in $(ls -d cmd/*); do cd $d && task build; cd -; done
  build-dev:
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - GOOS=linux GOARCH=arm64 go build -o ./dist/bootstrap
  watch:
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - cd "{{.ROOT_DIR}}/local" && ./CompileDaemon -directory "{{.USER_WORKING_DIR}}" -build "task build-dev"
  start-api:
    dotenv: ['{{.ROOT_DIR}}/local/.env']
    dir: cdk
    cmds:
      - cdk synth --no-staging --quiet
      - sam local start-api -t ./cdk.out/PRReminderStack.template.json
  start-workers:
    dotenv: ['{{.ROOT_DIR}}/local/.env']
    dir: cdk
    cmds:
      - cdk synth --no-staging --quiet
      - sam local start-lambda -t ./cdk.out/PRReminderStack.template.json
  deploy:
    cmds:
      - task build-all
      - cd cdk && cdk synth --quiet
      - cd cdk && cdk deploy --require-approval never
